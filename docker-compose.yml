services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8765:8765
    container_name: crdtsign-server
    networks:
      - crdtsign-network
    command: uv run crdtsign server --host 0.0.0.0 --port 8765
    environment:
      - PYTHONBUFFERED=1
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.settimeout(1); s.connect(('localhost', 8765)); s.close()"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  client-1:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5001:5000
    container_name: crdtsign-client-1
    networks:
      - crdtsign-network
    depends_on:
      server:
        condition: service_healthy
    command: uv run crdtsign app --host 0.0.0.0
    environment:
      - PYTHONBUFFERED=1
      - IS_CONTAINER=true
    volumes:
      - /etc/localtime:/etc/localtime

  client-2:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5002:5000
    container_name: crdtsign-client-2
    networks:
      - crdtsign-network
    depends_on:
      server:
        condition: service_healthy
    command: uv run crdtsign app --host 0.0.0.0
    environment:
      - PYTHONBUFFERED=1
      - IS_CONTAINER=true
    volumes:
      - /etc/localtime:/etc/localtime

  client-3:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 5003:5000
    container_name: crdtsign-client-3
    networks:
      - crdtsign-network
    depends_on:
      server:
        condition: service_healthy
    command: uv run crdtsign app --host 0.0.0.0
    environment:
      - PYTHONBUFFERED=1
      - IS_CONTAINER=true
    volumes:
      - /etc/localtime:/etc/localtime

networks:
  crdtsign-network:
    driver: bridge